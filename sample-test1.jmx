<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="sample test1" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.17. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">eddyf1xxxer.medium.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">lightstep.medium.systems</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VisitorQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query VisitorQuery {\n  visitor {\n    id\n    isBot\n    geolocation {\n      country\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">profile</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">VisitorQuery</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;userDomainValidityQuery&quot;,&quot;variables&quot;:{&quot;domain&quot;:&quot;.medium.com&quot;},&quot;query&quot;:&quot;query userDomainValidityQuery($domain: String!) {\n  userDomainValidity(domain: $domain)\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">profile</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">userDomainValidityQuery</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/clientele/reports/performance/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client&quot;:{&quot;name&quot;:&quot;lite&quot;,&quot;version&quot;:&quot;main-20210305-183757-c310e81f10&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;ready&quot;,&quot;data&quot;:{&quot;route&quot;:&quot;profile&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;duration&quot;:2720}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/clientele/reports/performance/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/clientele/reports/performance/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client&quot;:{&quot;name&quot;:&quot;lite&quot;,&quot;version&quot;:&quot;main-20210305-183757-c310e81f10&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;fcp&quot;,&quot;data&quot;:{&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;,&quot;duration&quot;:1622.449951171875}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/clientele/reports/performance/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lightstep.medium.systems/api/v0/reports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;runtime&quot;:{&quot;guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;start_micros&quot;:1615021613394485,&quot;group_name&quot;:&quot;lite-web&quot;,&quot;attrs&quot;:[{&quot;Key&quot;:&quot;lightstep.tracer_version&quot;,&quot;Value&quot;:&quot;0.20.8&quot;},{&quot;Key&quot;:&quot;lightstep.tracer_platform&quot;,&quot;Value&quot;:&quot;browser&quot;}]},&quot;span_records&quot;:[],&quot;log_records&quot;:null,&quot;timestamp_offset_micros&quot;:0,&quot;oldest_micros&quot;:1615021613394485,&quot;youngest_micros&quot;:1615021614054530,&quot;counters&quot;:null,&quot;internal_logs&quot;:[],&quot;internal_metrics&quot;:{&quot;counts&quot;:[],&quot;gauges&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="LightStep-Access-Token" elementType="Header">
                  <stringProp name="Header.name">LightStep-Access-Token</stringProp>
                  <stringProp name="Header.value">ce5be895bef60919541332990ac9fef2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/clientele/reports/performance/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client&quot;:{&quot;name&quot;:&quot;lite&quot;,&quot;version&quot;:&quot;main-20210305-183757-c310e81f10&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;before_domain_lookup&quot;,&quot;data&quot;:{&quot;duration&quot;:4,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;domain_lookup&quot;,&quot;data&quot;:{&quot;duration&quot;:0,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;connect&quot;,&quot;data&quot;:{&quot;duration&quot;:0,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;request&quot;,&quot;data&quot;:{&quot;duration&quot;:1294,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;response&quot;,&quot;data&quot;:{&quot;duration&quot;:2,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;load&quot;,&quot;data&quot;:{&quot;duration&quot;:3262,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;processing&quot;,&quot;data&quot;:{&quot;duration&quot;:1909,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;overall_fcp&quot;,&quot;data&quot;:{&quot;duration&quot;:1622.449951171875,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;client&quot;,&quot;data&quot;:{&quot;duration&quot;:275.449951171875,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}},{&quot;type&quot;:&quot;render&quot;,&quot;data&quot;:{&quot;duration&quot;:273.449951171875,&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/clientele/reports/performance/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lightstep.medium.systems/api/v0/reports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;runtime&quot;:{&quot;guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;start_micros&quot;:1615021613394485,&quot;group_name&quot;:&quot;lite-web&quot;,&quot;attrs&quot;:[{&quot;Key&quot;:&quot;lightstep.tracer_version&quot;,&quot;Value&quot;:&quot;0.20.8&quot;},{&quot;Key&quot;:&quot;lightstep.tracer_platform&quot;,&quot;Value&quot;:&quot;browser&quot;}]},&quot;span_records&quot;:[],&quot;log_records&quot;:null,&quot;timestamp_offset_micros&quot;:1603428,&quot;oldest_micros&quot;:1615021614054530,&quot;youngest_micros&quot;:1615021614853505,&quot;counters&quot;:null,&quot;internal_logs&quot;:[],&quot;internal_metrics&quot;:{&quot;counts&quot;:[],&quot;gauges&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="LightStep-Access-Token" elementType="Header">
                  <stringProp name="Header.name">LightStep-Access-Token</stringProp>
                  <stringProp name="Header.value">ce5be895bef60919541332990ac9fef2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lightstep.medium.systems/api/v0/reports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;runtime&quot;:{&quot;guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;start_micros&quot;:1615021613394485,&quot;group_name&quot;:&quot;lite-web&quot;,&quot;attrs&quot;:[{&quot;Key&quot;:&quot;lightstep.tracer_version&quot;,&quot;Value&quot;:&quot;0.20.8&quot;},{&quot;Key&quot;:&quot;lightstep.tracer_platform&quot;,&quot;Value&quot;:&quot;browser&quot;}]},&quot;span_records&quot;:[],&quot;log_records&quot;:null,&quot;timestamp_offset_micros&quot;:1547484,&quot;oldest_micros&quot;:1615021614853505,&quot;youngest_micros&quot;:1615021615244750,&quot;counters&quot;:null,&quot;internal_logs&quot;:[],&quot;internal_metrics&quot;:{&quot;counts&quot;:[],&quot;gauges&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="LightStep-Access-Token" elementType="Header">
                  <stringProp name="Header.name">LightStep-Access-Token</stringProp>
                  <stringProp name="Header.value">ce5be895bef60919541332990ac9fef2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lightstep.medium.systems/api/v0/reports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;runtime&quot;:{&quot;guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;start_micros&quot;:1615021613394485,&quot;group_name&quot;:&quot;lite-web&quot;,&quot;attrs&quot;:[{&quot;Key&quot;:&quot;lightstep.tracer_version&quot;,&quot;Value&quot;:&quot;0.20.8&quot;},{&quot;Key&quot;:&quot;lightstep.tracer_platform&quot;,&quot;Value&quot;:&quot;browser&quot;}]},&quot;span_records&quot;:[],&quot;log_records&quot;:null,&quot;timestamp_offset_micros&quot;:1550561,&quot;oldest_micros&quot;:1615021615244750,&quot;youngest_micros&quot;:1615021615620400,&quot;counters&quot;:null,&quot;internal_logs&quot;:[],&quot;internal_metrics&quot;:{&quot;counts&quot;:[],&quot;gauges&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="LightStep-Access-Token" elementType="Header">
                  <stringProp name="Header.name">LightStep-Access-Token</stringProp>
                  <stringProp name="Header.value">ce5be895bef60919541332990ac9fef2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/clientele/reports/performance/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client&quot;:{&quot;name&quot;:&quot;lite&quot;,&quot;version&quot;:&quot;main-20210305-183757-c310e81f10&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;fid&quot;,&quot;data&quot;:{&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;,&quot;duration&quot;:1.6950001008808613}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/clientele/reports/performance/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/clientele/reports/performance/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client&quot;:{&quot;name&quot;:&quot;lite&quot;,&quot;version&quot;:&quot;main-20210305-183757-c310e81f10&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;lcp&quot;,&quot;data&quot;:{&quot;auroraPage&quot;:&quot;yes&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;mobileOrTablet&quot;:&quot;no&quot;,&quot;experiment&quot;:&quot;&quot;,&quot;route&quot;:&quot;profile&quot;,&quot;duration&quot;:2987.02490234375}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/clientele/reports/performance/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;AccountTokenQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query AccountTokenQuery {\n  accountToken\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">profile</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">AccountTokenQuery</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lightstep.medium.systems/api/v0/reports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;runtime&quot;:{&quot;guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;start_micros&quot;:1615021613394485,&quot;group_name&quot;:&quot;lite-web&quot;,&quot;attrs&quot;:[{&quot;Key&quot;:&quot;lightstep.tracer_version&quot;,&quot;Value&quot;:&quot;0.20.8&quot;},{&quot;Key&quot;:&quot;lightstep.tracer_platform&quot;,&quot;Value&quot;:&quot;browser&quot;}]},&quot;span_records&quot;:[{&quot;span_guid&quot;:&quot;10f72f7d3656fa8d&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.firstContentfulPaint.v2&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611083000,&quot;youngest_micros&quot;:1615021612705450,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;46dceafb6eb8f1e0&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;33fbb8e25ad3bd78&quot;,&quot;trace_guid&quot;:&quot;690ff1bd2a7c5074&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.performance.report&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021613803365,&quot;youngest_micros&quot;:1615021614019785,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;report&quot;,&quot;Value&quot;:&quot;ready&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;span.kind&quot;,&quot;Value&quot;:&quot;client&quot;},{&quot;Key&quot;:&quot;http.status_code&quot;,&quot;Value&quot;:&quot;200&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;32dddd7f603f370a&quot;,&quot;trace_guid&quot;:&quot;5bb13eae292b4073&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.performance.report&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021613804310,&quot;youngest_micros&quot;:1615021614019935,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;report&quot;,&quot;Value&quot;:&quot;fcp&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;span.kind&quot;,&quot;Value&quot;:&quot;client&quot;},{&quot;Key&quot;:&quot;http.status_code&quot;,&quot;Value&quot;:&quot;200&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;5077011e51f56f13&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.beforeDomainLookup&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611083000,&quot;youngest_micros&quot;:1615021611087000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;1d88a7c748c5240b&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.domainLookup&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611087000,&quot;youngest_micros&quot;:1615021611087000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;036adf533872e518&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.connect&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611087000,&quot;youngest_micros&quot;:1615021611087000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;70d9449741514413&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.request&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611136000,&quot;youngest_micros&quot;:1615021612430000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;1898865219cb7681&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.response&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021612430000,&quot;youngest_micros&quot;:1615021612432000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;153df7d904919c10&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.processing&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021612436000,&quot;youngest_micros&quot;:1615021614345000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;098d37cf5c3bd0a1&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.firstContentfulPaint&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611083000,&quot;youngest_micros&quot;:1615021612705450,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;23bad24e4cab5a83&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.render&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021612432000,&quot;youngest_micros&quot;:1615021612705450,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;2b0876fd2fe266b1&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;2b0876fd2fe266b1&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.client&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021612430000,&quot;youngest_micros&quot;:1615021612705450,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;56bdc1b977b0ee3f&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;56bdc1b977b0ee3f&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.navigation&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611083000,&quot;youngest_micros&quot;:1615021614345000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;46dceafb6eb8f1e0&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:[{&quot;timestamp_micros&quot;:1615021614347920,&quot;fields&quot;:[],&quot;runtime_guid&quot;:null,&quot;span_guid&quot;:null,&quot;stable_name&quot;:null,&quot;message&quot;:null,&quot;level&quot;:null,&quot;thread_id&quot;:null,&quot;filename&quot;:null,&quot;line_number&quot;:null,&quot;stack_frames&quot;:null,&quot;payload_json&quot;:null,&quot;error_flag&quot;:null}]},{&quot;span_guid&quot;:&quot;744ec44901256c9d&quot;,&quot;trace_guid&quot;:&quot;686cb52138e48360&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.performance.report&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021614347370,&quot;youngest_micros&quot;:1615021614508545,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;report&quot;,&quot;Value&quot;:&quot;render&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;span.kind&quot;,&quot;Value&quot;:&quot;client&quot;},{&quot;Key&quot;:&quot;http.status_code&quot;,&quot;Value&quot;:&quot;200&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;2b90f7b668fdba38&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.input.first.delay&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:4567275,&quot;youngest_micros&quot;:4568970,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;46dceafb6eb8f1e0&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;6e0b02a03ab7e10d&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;timing.largestContentfulPaint&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021611083000,&quot;youngest_micros&quot;:1615021614070025,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;user.logged_in&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;user.experiment&quot;,&quot;Value&quot;:&quot;&quot;},{&quot;Key&quot;:&quot;device.mobile_or_tablet&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.route&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;req.router&quot;,&quot;Value&quot;:&quot;USER&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;46dceafb6eb8f1e0&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;5630d06c58cf5157&quot;,&quot;trace_guid&quot;:&quot;3b44986d5bd19329&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.performance.report&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021615653970,&quot;youngest_micros&quot;:1615021615920635,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;report&quot;,&quot;Value&quot;:&quot;fid&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;span.kind&quot;,&quot;Value&quot;:&quot;client&quot;},{&quot;Key&quot;:&quot;http.status_code&quot;,&quot;Value&quot;:&quot;200&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;109a52572ee279fa&quot;,&quot;trace_guid&quot;:&quot;07a6dddd3dc9dc87&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.performance.report&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021615744080,&quot;youngest_micros&quot;:1615021615921590,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;report&quot;,&quot;Value&quot;:&quot;lcp&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;profile&quot;},{&quot;Key&quot;:&quot;span.kind&quot;,&quot;Value&quot;:&quot;client&quot;},{&quot;Key&quot;:&quot;http.status_code&quot;,&quot;Value&quot;:&quot;200&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null}],&quot;log_records&quot;:null,&quot;timestamp_offset_micros&quot;:1550561,&quot;oldest_micros&quot;:1615021615620400,&quot;youngest_micros&quot;:1615021618221645,&quot;counters&quot;:null,&quot;internal_logs&quot;:[],&quot;internal_metrics&quot;:{&quot;counts&quot;:[],&quot;gauges&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="LightStep-Access-Token" elementType="Header">
                  <stringProp name="Header.name">LightStep-Access-Token</stringProp>
                  <stringProp name="Header.value">ce5be895bef60919541332990ac9fef2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/batch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;ae177fa09021&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613254,&quot;eventId&quot;:&quot;klxi64791r0ewtdmr0l&quot;},{&quot;key&quot;:&quot;client.navigate&quot;,&quot;data&quot;:{&quot;metadata&quot;:{},&quot;newPath&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;oldPath&quot;:&quot;&quot;,&quot;source&quot;:&quot;&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613255,&quot;eventId&quot;:&quot;klxi647bxyxthjbw74&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613256,&quot;eventId&quot;:&quot;klxi647c22xmjhl2n48&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613256,&quot;eventId&quot;:&quot;klxi647c22yhhi4uqkf&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613256,&quot;eventId&quot;:&quot;klxi647c2p9p34f4w18&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613256,&quot;eventId&quot;:&quot;klxi647cbz22u26hb8&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613256,&quot;eventId&quot;:&quot;klxi647cvat0bl2zrk&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613257,&quot;eventId&quot;:&quot;klxi647d2ltywdfmdsi&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;ca24bb15e06f&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613257,&quot;eventId&quot;:&quot;klxi647d8lab60pbpk&quot;},{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;bc09099c5e81&quot;],&quot;collectionIds&quot;:[&quot;&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;&quot;],&quot;tops&quot;:[211],&quot;bottoms&quot;:[871],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021613269,&quot;timeDiff&quot;:0,&quot;scrollTop&quot;:0,&quot;scrollBottom&quot;:979,&quot;scrollableHeight&quot;:9070,&quot;viewStartedAt&quot;:1615021613125,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613269,&quot;eventId&quot;:&quot;klxi647prgse31megp&quot;},{&quot;key&quot;:&quot;post.clientPresented&quot;,&quot;data&quot;:{&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;source&quot;:&quot;---------0----------------------------&quot;,&quot;collectionId&quot;:null,&quot;isFullPost&quot;:false,&quot;pinned&quot;:false,&quot;postVisibility&quot;:2,&quot;context&quot;:null,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613603,&quot;eventId&quot;:&quot;klxi64gz13wjv1cihco&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;nav_reg&quot;,&quot;operation&quot;:&quot;login&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613616,&quot;eventId&quot;:&quot;klxi64hbsxd7w1fc3a&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;bookmark_preview&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613616,&quot;eventId&quot;:&quot;klxi64hc1ylc4kwdte1&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;clap_preview&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613616,&quot;eventId&quot;:&quot;klxi64hcq4nkkcduxk&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;follow_profile&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613617,&quot;eventId&quot;:&quot;klxi64hd1awkt18ml3o&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;nav_reg&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613617,&quot;eventId&quot;:&quot;klxi64hd27amkwsdy63&quot;},{&quot;key&quot;:&quot;profile.viewed&quot;,&quot;data&quot;:{&quot;profileId&quot;:&quot;fc3f10d7b802&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021613872,&quot;eventId&quot;:&quot;klxi64of28uo5qtdzw0&quot;},{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;bc09099c5e81&quot;],&quot;collectionIds&quot;:[&quot;&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;&quot;],&quot;tops&quot;:[211],&quot;bottoms&quot;:[871],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021614890,&quot;timeDiff&quot;:1621,&quot;scrollTop&quot;:300,&quot;scrollBottom&quot;:1279,&quot;scrollableHeight&quot;:9070,&quot;viewStartedAt&quot;:1615021613125,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021614890,&quot;eventId&quot;:&quot;klxi65gqeo8hp6hra7&quot;},{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;261cee3eb490&quot;],&quot;collectionIds&quot;:[&quot;5b301f10ddcd&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;&quot;],&quot;tops&quot;:[1088],&quot;bottoms&quot;:[2013],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021614891,&quot;timeDiff&quot;:0,&quot;scrollTop&quot;:300,&quot;scrollBottom&quot;:1279,&quot;scrollableHeight&quot;:9070,&quot;viewStartedAt&quot;:1615021613148,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021614891,&quot;eventId&quot;:&quot;klxi65gr16578nci9qj&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615838,&quot;eventId&quot;:&quot;klxi6671199zb84kzy1&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi6671287nta90lma&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi667128d7tpuykwe&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi66712b3gjxfhf52&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi66712bujd3zqksw&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi66712euw6tvzmbf&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi6671kbejk2g7dm&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615837,&quot;eventId&quot;:&quot;klxi6671wsfd1sm8gl&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615838,&quot;eventId&quot;:&quot;klxi66721ertbqqvka2&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615838,&quot;eventId&quot;:&quot;klxi66721x1wrjsfzyu&quot;},{&quot;key&quot;:&quot;susi.modalViewed&quot;,&quot;data&quot;:{&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;entryPoint&quot;:&quot;clap_preview&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615838,&quot;eventId&quot;:&quot;klxi66722gs4me1ddv8&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021615838,&quot;eventId&quot;:&quot;klxi6672wq22xolc88&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617350,&quot;eventId&quot;:&quot;klxi67d21g27006r8fr&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617350,&quot;eventId&quot;:&quot;klxi67d2211jq576jwb&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617350,&quot;eventId&quot;:&quot;klxi67d224hlet9ajmu&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617351,&quot;eventId&quot;:&quot;klxi67d31hv8nppe48w&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617351,&quot;eventId&quot;:&quot;klxi67d31mr14ec9ey9&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617351,&quot;eventId&quot;:&quot;klxi67d32cj679x3vyh&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617351,&quot;eventId&quot;:&quot;klxi67d32d26sr3amck&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617351,&quot;eventId&quot;:&quot;klxi67d3id187nhk2m&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617352,&quot;eventId&quot;:&quot;klxi67d3l4qmlxjdmr&quot;},{&quot;key&quot;:&quot;susi.modalViewed&quot;,&quot;data&quot;:{&quot;operation&quot;:&quot;login&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617352,&quot;eventId&quot;:&quot;klxi67d41289xpgvpaf&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617352,&quot;eventId&quot;:&quot;klxi67d418do0nup6ek&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617352,&quot;eventId&quot;:&quot;klxi67d41hf6ahxjrho&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617352,&quot;eventId&quot;:&quot;klxi67d41ynl2vm4r6a&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021617352,&quot;eventId&quot;:&quot;klxi67d451gon72viq&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-xsrf-token" elementType="Header">
                  <stringProp name="Header.name">x-xsrf-token</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;PostMeter&quot;,&quot;variables&quot;:{&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;postMeteringOptions&quot;:{&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;source&quot;:&quot;&quot;}},&quot;query&quot;:&quot;query PostMeter($postId: ID!, $postMeteringOptions: PostMeteringOptions) {\n  meterPost(postId: $postId, postMeteringOptions: $postMeteringOptions) {\n    __typename\n    ... on MeteringInfo {\n      ...PostScreen_meteringInfo\n      __typename\n    }\n  }\n}\n\nfragment PostScreen_meteringInfo on MeteringInfo {\n  __typename\n  postIds\n  maxUnlockCount\n  unlocksRemaining\n  ...PostHeader_meteringInfo\n  ...RegWall_meteringInfo\n  ...buildBranchViewData_meteringInfo\n}\n\nfragment PostHeader_meteringInfo on MeteringInfo {\n  ...MeterController_meteringInfo\n  __typename\n}\n\nfragment MeterController_meteringInfo on MeteringInfo {\n  postIds\n  maxUnlockCount\n  __typename\n}\n\nfragment RegWall_meteringInfo on MeteringInfo {\n  postIds\n  __typename\n}\n\nfragment buildBranchViewData_meteringInfo on MeteringInfo {\n  postIds\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">post</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">PostMeter</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;PostHandler&quot;,&quot;variables&quot;:{&quot;includePostRecirc&quot;:false,&quot;includeSequenceRecirc&quot;:false,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;includePostInternalLinks&quot;:true,&quot;postRecircPaging&quot;:8},&quot;query&quot;:&quot;query PostHandler($postId: ID!, $postMeteringOptions: PostMeteringOptions, $includePostInternalLinks: Boolean!, $includePostRecirc: Boolean = false, $includeSequenceRecirc: Boolean = false, $postRecircPaging: PaginationLimit) {\n  postResult(id: $postId) {\n    __typename\n    ...PostResultError_postResult\n    ... on Post {\n      ...PostScreen_post\n      ...PostCanonicalizer_post\n      __typename\n    }\n  }\n}\n\nfragment PostResultError_postResult on PostResult {\n  __typename\n  ... on Post {\n    id\n    __typename\n  }\n  ... on UnavailableForLegalReasons {\n    ...UnavailableForLegalReasonsScreen_unavailableForLegalReasons\n    __typename\n  }\n  ... on WithheldInCountry {\n    ...WithheldInCountryScreen_withheldInCountry\n    __typename\n  }\n}\n\nfragment UnavailableForLegalReasonsScreen_unavailableForLegalReasons on UnavailableForLegalReasons {\n  lumenId\n  __typename\n}\n\nfragment WithheldInCountryScreen_withheldInCountry on WithheldInCountry {\n  lumenId\n  __typename\n}\n\nfragment PostCanonicalizer_post on Post {\n  mediumUrl\n  __typename\n  id\n}\n\nfragment PostScreen_post on Post {\n  id\n  canonicalUrl\n  collection {\n    id\n    domain\n    googleAnalyticsId\n    slug\n    ...CollectionMetabar_collection\n    ...MetaHeader_publisher\n    ...auroraHooks_publisher\n    __typename\n  }\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    validatedShareKey\n    isCacheableContent\n    __typename\n  }\n  creator {\n    isFollowing\n    viewerIsUser\n    ...SuspendedBannerLoader_user\n    ...MetaHeader_publisher\n    ...UserSubdomainFlow_user\n    ...auroraHooks_publisher\n    ...TruncatedPostCard_user\n    __typename\n    id\n  }\n  customStyleSheet {\n    id\n    postBody {\n      ...SupportedContainerStyles_styleNode\n      __typename\n    }\n    ...CustomBackgroundWrapper_customStyleSheet\n    ...MetaHeader_customStyleSheet\n    __typename\n  }\n  firstPublishedAt\n  isLocked\n  isPublished\n  isShortform\n  layerCake\n  primaryTopic {\n    name\n    slug\n    __typename\n    id\n  }\n  title\n  readCreatorPostsCount\n  ...AddCollaborator_post\n  ...InteractivePostBody_post\n  ...LimitedStateInterstitial_post\n  ...MaybeRedirectToEditor_post\n  ...Metabar_post\n  ...PayWall_post\n  ...PostBodyInserts_post\n  ...PostCacheController_post\n  ...PostFooter_post\n  ...PostHeader_post\n  ...PostMetadata_post\n  ...PostPublishedDialog_prerequisite_post\n  ...PostReadTracker_post\n  ...PostScreenThemeProvider_post\n  ...PostScrollTracker_post\n  ...PostSidebar_post\n  ...RegWall_post\n  ...SuspendedBannerLoader_post\n  ...buildBranchViewData_post\n  ...optimizelyData_post\n  ...TableOfContents_post\n  __typename\n}\n\nfragment AddCollaborator_post on Post {\n  isPublished\n  id\n  __typename\n}\n\nfragment CollectionMetabar_collection on Collection {\n  id\n  colorBehavior\n  isAuroraVisible\n  favicon {\n    id\n    __typename\n  }\n  ...CollectionMetabarTop_collection\n  ...CollectionMetabarBottom_collection\n  ...collectionDefaultBackgroundTheme_collection\n  ...collectionTintBackgroundTheme_collection\n  __typename\n}\n\nfragment CollectionMetabarTop_collection on Collection {\n  slug\n  ...CollectionLogo_collection\n  ...collectionUrl_collection\n  ...MetabarActions_publisher\n  __typename\n  id\n}\n\nfragment CollectionLogo_collection on Collection {\n  ...auroraHooks_publisher\n  name\n  isAuroraVisible\n  logo {\n    id\n    originalWidth\n    originalHeight\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment auroraHooks_publisher on Publisher {\n  __typename\n  ... on Collection {\n    isAuroraEligible\n    isAuroraVisible\n    viewerIsEditor\n    __typename\n    id\n  }\n  ... on User {\n    isAuroraVisible\n    __typename\n    id\n  }\n}\n\nfragment collectionUrl_collection on Collection {\n  id\n  domain\n  slug\n  __typename\n}\n\nfragment MetabarActions_publisher on Publisher {\n  ...MetabarActionsLI_publisher\n  ...MetabarActionsLO_publisher\n  __typename\n}\n\nfragment MetabarActionsLI_publisher on Publisher {\n  __typename\n  ... on Collection {\n    id\n    isAuroraVisible\n    ...MetabarActionsLI_collection_common\n    ...CollectionAvatar_collection\n    ...CollectionMetabarActionsPopover_collection\n    ...SearchWidget_publisher\n    __typename\n  }\n  ... on User {\n    id\n    name\n    isAuroraVisible\n    __typename\n  }\n  ...MetaHeaderPubMenu_publisher\n}\n\nfragment MetabarActionsLI_collection_common on Collection {\n  creator {\n    id\n    __typename\n  }\n  viewerIsEditor\n  __typename\n  id\n}\n\nfragment CollectionAvatar_collection on Collection {\n  name\n  avatar {\n    id\n    __typename\n  }\n  ...collectionUrl_collection\n  __typename\n  id\n}\n\nfragment CollectionMetabarActionsPopover_collection on Collection {\n  id\n  slug\n  isAuroraEligible\n  isAuroraVisible\n  isEnrolledInHightower\n  newsletterV3 {\n    id\n    slug\n    __typename\n  }\n  ...collectionUrl_collection\n  __typename\n}\n\nfragment MetaHeaderPubMenu_publisher on Publisher {\n  __typename\n  ... on Collection {\n    id\n    slug\n    name\n    ...MutePopoverOptions_collection\n    __typename\n  }\n  ... on User {\n    id\n    isBlocking\n    ...MutePopoverOptions_creator\n    __typename\n  }\n}\n\nfragment MutePopoverOptions_collection on Collection {\n  id\n  viewerIsEditor\n  viewerIsMuting\n  __typename\n}\n\nfragment MutePopoverOptions_creator on User {\n  id\n  isMuting\n  __typename\n}\n\nfragment SearchWidget_publisher on Publisher {\n  __typename\n  ... on Collection {\n    id\n    slug\n    name\n    domain\n    __typename\n  }\n  ... on User {\n    id\n    name\n    __typename\n  }\n  ...algoliaSearch_publisher\n}\n\nfragment algoliaSearch_publisher on Publisher {\n  __typename\n  id\n}\n\nfragment MetabarActionsLO_publisher on Publisher {\n  __typename\n  ... on Collection {\n    id\n    isAuroraVisible\n    __typename\n  }\n  ... on User {\n    id\n    username\n    __typename\n  }\n  ...MetaHeaderPubMenu_publisher\n}\n\nfragment CollectionMetabarBottom_collection on Collection {\n  slug\n  ...CollectionNavItems_collection\n  ...CollectionLogo_collection\n  ...collectionUrl_collection\n  ...ThemeUtilTintBackground_collection\n  __typename\n  id\n}\n\nfragment CollectionNavItems_collection on Collection {\n  navItems {\n    title\n    url\n    type\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment ThemeUtilTintBackground_collection on Collection {\n  colorPalette {\n    tintBackgroundSpectrum {\n      ...ThemeUtil_colorSpectrum\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment ThemeUtil_colorSpectrum on ColorSpectrum {\n  backgroundColor\n  ...ThemeUtilInterpolateHelpers_colorSpectrum\n  __typename\n}\n\nfragment ThemeUtilInterpolateHelpers_colorSpectrum on ColorSpectrum {\n  colorPoints {\n    ...ThemeUtil_colorPoint\n    __typename\n  }\n  __typename\n}\n\nfragment ThemeUtil_colorPoint on ColorPoint {\n  color\n  point\n  __typename\n}\n\nfragment collectionDefaultBackgroundTheme_collection on Collection {\n  colorPalette {\n    ...collectionDefaultBackgroundTheme_colorPalette\n    __typename\n  }\n  customStyleSheet {\n    id\n    ...collectionDefaultBackgroundTheme_customStyleSheet\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment collectionDefaultBackgroundTheme_colorPalette on ColorPalette {\n  ...customDefaultBackgroundTheme_colorPalette\n  __typename\n}\n\nfragment customDefaultBackgroundTheme_colorPalette on ColorPalette {\n  highlightSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  defaultBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  tintBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  __typename\n}\n\nfragment collectionDefaultBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  ...customDefaultBackgroundTheme_customStyleSheet\n  __typename\n}\n\nfragment customDefaultBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          ...customDefaultBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      background {\n        colorPalette {\n          ...customDefaultBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment collectionTintBackgroundTheme_collection on Collection {\n  colorPalette {\n    ...collectionTintBackgroundTheme_colorPalette\n    __typename\n  }\n  customStyleSheet {\n    id\n    ...collectionTintBackgroundTheme_customStyleSheet\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment collectionTintBackgroundTheme_colorPalette on ColorPalette {\n  ...customTintBackgroundTheme_colorPalette\n  __typename\n}\n\nfragment customTintBackgroundTheme_colorPalette on ColorPalette {\n  tintBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  __typename\n}\n\nfragment collectionTintBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  ...customTintBackgroundTheme_customStyleSheet\n  __typename\n}\n\nfragment customTintBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          ...customTintBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment CustomBackgroundWrapper_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      background {\n        ...getHexFromColorValue_colorValue\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment getHexFromColorValue_colorValue on ColorValue {\n  rgb\n  alpha\n  __typename\n}\n\nfragment InteractivePostBody_post on Post {\n  id\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    bodyModel {\n      ...PostBody_bodyModel\n      paragraphs {\n        ...HighlighSegmentContext_paragraph\n        ...NormalizeHighlights_paragraph\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  creator {\n    id\n    allowNotes\n    ...PostBody_creator\n    __typename\n  }\n  ...ActiveSelectionContext_post\n  __typename\n}\n\nfragment ActiveSelectionContext_post on Post {\n  id\n  ...SelectionMenu_post\n  ...PostNewNoteCard_post\n  __typename\n}\n\nfragment SelectionMenu_post on Post {\n  id\n  isPublished\n  creator {\n    id\n    allowNotes\n    __typename\n  }\n  ...SelectionMenuPopover_post\n  __typename\n}\n\nfragment SelectionMenuPopover_post on Post {\n  id\n  isLocked\n  isPublished\n  latestPublishedVersion\n  visibility\n  __typename\n}\n\nfragment PostNewNoteCard_post on Post {\n  id\n  latestPublishedVersion\n  __typename\n}\n\nfragment HighlighSegmentContext_paragraph on Paragraph {\n  ...ParagraphRefsMapContext_paragraph\n  __typename\n  id\n}\n\nfragment ParagraphRefsMapContext_paragraph on Paragraph {\n  id\n  name\n  text\n  __typename\n}\n\nfragment NormalizeHighlights_paragraph on Paragraph {\n  name\n  text\n  __typename\n  id\n}\n\nfragment PostBody_bodyModel on RichText {\n  sections {\n    name\n    startIndex\n    textLayout\n    imageLayout\n    backgroundImage {\n      id\n      originalHeight\n      originalWidth\n      __typename\n    }\n    videoLayout\n    backgroundVideo {\n      videoId\n      originalHeight\n      originalWidth\n      previewImageId\n      __typename\n    }\n    __typename\n  }\n  paragraphs {\n    id\n    ...PostBodySection_paragraphs\n    __typename\n  }\n  ...normalizedBodyModel_richText\n  __typename\n}\n\nfragment normalizedBodyModel_richText on RichText {\n  paragraphs {\n    markups {\n      type\n      __typename\n    }\n    ...getParagraphHighlights_paragraph\n    ...getParagraphPrivateNotes_paragraph\n    __typename\n  }\n  sections {\n    startIndex\n    ...getSectionEndIndex_section\n    __typename\n  }\n  ...getParagraphStyles_richText\n  ...getParagraphSpaces_richText\n  __typename\n}\n\nfragment getParagraphHighlights_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment getParagraphPrivateNotes_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment getSectionEndIndex_section on Section {\n  startIndex\n  __typename\n}\n\nfragment getParagraphStyles_richText on RichText {\n  paragraphs {\n    text\n    type\n    __typename\n  }\n  sections {\n    ...getSectionEndIndex_section\n    __typename\n  }\n  __typename\n}\n\nfragment getParagraphSpaces_richText on RichText {\n  paragraphs {\n    layout\n    metadata {\n      originalHeight\n      originalWidth\n      __typename\n    }\n    type\n    ...paragraphExtendsImageGrid_paragraph\n    __typename\n  }\n  ...getSeriesParagraphTopSpacings_richText\n  ...getPostParagraphTopSpacings_richText\n  __typename\n}\n\nfragment paragraphExtendsImageGrid_paragraph on Paragraph {\n  layout\n  type\n  __typename\n  id\n}\n\nfragment getSeriesParagraphTopSpacings_richText on RichText {\n  paragraphs {\n    id\n    __typename\n  }\n  sections {\n    startIndex\n    __typename\n  }\n  __typename\n}\n\nfragment getPostParagraphTopSpacings_richText on RichText {\n  paragraphs {\n    layout\n    text\n    __typename\n  }\n  sections {\n    startIndex\n    __typename\n  }\n  __typename\n}\n\nfragment PostBodySection_paragraphs on Paragraph {\n  name\n  ...PostBodyParagraph_paragraph\n  __typename\n  id\n}\n\nfragment PostBodyParagraph_paragraph on Paragraph {\n  name\n  type\n  ...ImageParagraph_paragraph\n  ...TextParagraph_paragraph\n  ...IframeParagraph_paragraph\n  ...MixtapeParagraph_paragraph\n  __typename\n  id\n}\n\nfragment IframeParagraph_paragraph on Paragraph {\n  iframe {\n    mediaResource {\n      id\n      iframeSrc\n      iframeHeight\n      iframeWidth\n      title\n      __typename\n    }\n    __typename\n  }\n  layout\n  ...getEmbedlyCardUrlParams_paragraph\n  ...Markups_paragraph\n  __typename\n  id\n}\n\nfragment getEmbedlyCardUrlParams_paragraph on Paragraph {\n  type\n  iframe {\n    mediaResource {\n      iframeSrc\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment Markups_paragraph on Paragraph {\n  name\n  text\n  hasDropCap\n  dropCapImage {\n    ...MarkupNode_data_dropCapImage\n    __typename\n    id\n  }\n  markups {\n    type\n    start\n    end\n    href\n    anchorType\n    userId\n    linkMetadata {\n      httpStatus\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment MarkupNode_data_dropCapImage on ImageMetadata {\n  ...DropCap_image\n  __typename\n  id\n}\n\nfragment DropCap_image on ImageMetadata {\n  id\n  originalHeight\n  originalWidth\n  __typename\n}\n\nfragment ImageParagraph_paragraph on Paragraph {\n  href\n  layout\n  metadata {\n    id\n    originalHeight\n    originalWidth\n    focusPercentX\n    focusPercentY\n    alt\n    __typename\n  }\n  ...Markups_paragraph\n  ...PostAnnotationsMarker_paragraph\n  __typename\n  id\n}\n\nfragment PostAnnotationsMarker_paragraph on Paragraph {\n  ...PostViewNoteCard_paragraph\n  __typename\n  id\n}\n\nfragment PostViewNoteCard_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment TextParagraph_paragraph on Paragraph {\n  type\n  hasDropCap\n  ...Markups_paragraph\n  ...ParagraphRefsMapContext_paragraph\n  __typename\n  id\n}\n\nfragment MixtapeParagraph_paragraph on Paragraph {\n  text\n  type\n  mixtapeMetadata {\n    href\n    thumbnailImageId\n    __typename\n  }\n  markups {\n    start\n    end\n    type\n    href\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment PostBody_creator on User {\n  ...PostNotesMarkers_creator\n  __typename\n  id\n}\n\nfragment PostNotesMarkers_creator on User {\n  id\n  name\n  isFollowing\n  __typename\n}\n\nfragment LimitedStateInterstitial_post on Post {\n  creator {\n    id\n    __typename\n  }\n  isLimitedState\n  __typename\n  id\n}\n\nfragment MaybeRedirectToEditor_post on Post {\n  id\n  isPublished\n  collection {\n    id\n    viewerCanEditOwnPosts\n    viewerCanEditPosts\n    viewerIsEditor\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment Metabar_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  primaryTopic {\n    name\n    slug\n    __typename\n    id\n  }\n  collection {\n    id\n    favicon {\n      id\n      __typename\n    }\n    __typename\n  }\n  ...MetabarActions_post\n  ...MetabarActionsLO_post\n  ...MetabarLeft_post\n  __typename\n}\n\nfragment MetabarActions_post on Post {\n  ...MetabarActionsLI_post\n  ...MetabarActionsLO_post\n  __typename\n  id\n}\n\nfragment MetabarActionsLI_post on Post {\n  ...MetabarButtonConversionLI_post\n  isLocked\n  pendingCollection {\n    ...MetabarActionsLI_collection_common\n    __typename\n    id\n  }\n  ...MetabarPostMenuButton_post\n  __typename\n  id\n}\n\nfragment MetabarButtonConversionLI_post on Post {\n  ...UpsellClickable_post\n  __typename\n  id\n}\n\nfragment UpsellClickable_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment MetabarPostMenuButton_post on Post {\n  id\n  ...ShareFriendLink_post\n  ...MetabarPostMenuList_post\n  __typename\n}\n\nfragment ShareFriendLink_post on Post {\n  id\n  shareKey\n  mediumUrl\n  __typename\n}\n\nfragment MetabarPostMenuList_post on Post {\n  id\n  shareKey\n  mediumUrl\n  __typename\n}\n\nfragment MetabarActionsLO_post on Post {\n  id\n  ...MetabarButtonConversionLO_post\n  ...SusiClickable_post\n  __typename\n}\n\nfragment MetabarButtonConversionLO_post on Post {\n  ...UpsellClickable_post\n  __typename\n  id\n}\n\nfragment SusiClickable_post on Post {\n  id\n  mediumUrl\n  ...SusiContainer_post\n  __typename\n}\n\nfragment SusiContainer_post on Post {\n  id\n  __typename\n}\n\nfragment MetabarLeft_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  isPublished\n  pendingCollection {\n    creator {\n      id\n      __typename\n    }\n    name\n    viewerIsEditor\n    __typename\n    id\n  }\n  statusForCollection\n  ...DraftStatus_post\n  __typename\n}\n\nfragment DraftStatus_post on Post {\n  id\n  pendingCollection {\n    creator {\n      id\n      __typename\n    }\n    viewerIsEditor\n    ...BoldCollectionName_collection\n    __typename\n    id\n  }\n  statusForCollection\n  creator {\n    id\n    __typename\n  }\n  isPublished\n  __typename\n}\n\nfragment BoldCollectionName_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment MetaHeader_customStyleSheet on CustomStyleSheet {\n  id\n  header {\n    headerScale\n    horizontalAlignment\n    __typename\n  }\n  ...MetaHeaderBackground_customStyleSheet\n  ...MetaHeaderEngagement_customStyleSheet\n  ...MetaHeaderLogo_customStyleSheet\n  ...MetaHeaderNavVertical_customStyleSheet\n  ...MetaHeaderTagline_customStyleSheet\n  ...MetaHeaderThemeProvider_customStyleSheet\n  __typename\n}\n\nfragment MetaHeaderBackground_customStyleSheet on CustomStyleSheet {\n  id\n  header {\n    headerScale\n    backgroundImageDisplayMode\n    backgroundImageVerticalAlignment\n    backgroundColorDisplayMode\n    backgroundColor {\n      ...getHexFromColorValue_colorValue\n      ...getOpaqueHexFromColorValue_colorValue\n      __typename\n    }\n    secondaryBackgroundColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    postBackgroundColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    backgroundImage {\n      ...MetaHeaderBackground_imageMetadata\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MetaHeaderBackground_imageMetadata on ImageMetadata {\n  id\n  originalWidth\n  __typename\n}\n\nfragment getOpaqueHexFromColorValue_colorValue on ColorValue {\n  rgb\n  __typename\n}\n\nfragment MetaHeaderEngagement_customStyleSheet on CustomStyleSheet {\n  ...MetaHeaderNav_customStyleSheet\n  __typename\n  id\n}\n\nfragment MetaHeaderNav_customStyleSheet on CustomStyleSheet {\n  id\n  navigation {\n    navItems {\n      name\n      ...MetaHeaderNavLink_headerNavigationItem\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MetaHeaderNavLink_headerNavigationItem on HeaderNavigationItem {\n  name\n  ...getNavItemHref_headerNavigationItem\n  __typename\n}\n\nfragment getNavItemHref_headerNavigationItem on HeaderNavigationItem {\n  href\n  tagSlugs\n  type\n  __typename\n}\n\nfragment MetaHeaderLogo_customStyleSheet on CustomStyleSheet {\n  id\n  header {\n    nameColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    nameTreatment\n    postNameTreatment\n    logoImage {\n      ...MetaHeaderLogo_imageMetadata\n      __typename\n    }\n    logoScale\n    __typename\n  }\n  __typename\n}\n\nfragment MetaHeaderLogo_imageMetadata on ImageMetadata {\n  id\n  originalWidth\n  originalHeight\n  ...PublisherLogo_image\n  __typename\n}\n\nfragment PublisherLogo_image on ImageMetadata {\n  id\n  originalHeight\n  originalWidth\n  __typename\n}\n\nfragment MetaHeaderNavVertical_customStyleSheet on CustomStyleSheet {\n  id\n  navigation {\n    navItems {\n      ...MetaHeaderNavLink_headerNavigationItem\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MetaHeaderTagline_customStyleSheet on CustomStyleSheet {\n  id\n  header {\n    taglineColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    taglineTreatment\n    __typename\n  }\n  __typename\n}\n\nfragment MetaHeaderThemeProvider_customStyleSheet on CustomStyleSheet {\n  id\n  ...useMetaHeaderTheme_customStyleSheet\n  __typename\n}\n\nfragment useMetaHeaderTheme_customStyleSheet on CustomStyleSheet {\n  ...customDefaultBackgroundTheme_customStyleSheet\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          tintBackgroundSpectrum {\n            ...ThemeUtil_colorSpectrum\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  header {\n    backgroundColor {\n      colorPalette {\n        tintBackgroundSpectrum {\n          ...ThemeUtil_colorSpectrum\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    postBackgroundColor {\n      colorPalette {\n        tintBackgroundSpectrum {\n          ...ThemeUtil_colorSpectrum\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    backgroundImage {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment MetaHeader_publisher on Publisher {\n  __typename\n  name\n  ...MetaHeaderEngagement_publisher\n  ...MetaHeaderLogo_publisher\n  ...MetaHeaderNavVertical_publisher\n  ...MetaHeaderTagline_publisher\n  ...MetaHeaderThemeProvider_publisher\n  ...MetaHeaderActions_publisher\n  ...MetaHeaderTop_publisher\n  ... on Collection {\n    id\n    favicon {\n      id\n      __typename\n    }\n    tagline\n    ...CollectionNavigationContextProvider_collection\n    __typename\n  }\n  ... on User {\n    id\n    bio\n    __typename\n  }\n}\n\nfragment CollectionNavigationContextProvider_collection on Collection {\n  id\n  domain\n  slug\n  isAuroraVisible\n  __typename\n}\n\nfragment MetaHeaderEngagement_publisher on Publisher {\n  ...MetaHeaderNav_publisher\n  ...PublisherAboutLink_publisher\n  ...PublisherFollowButton_publisher\n  ...PublisherFollowerCount_publisher\n  ... on Collection {\n    creator {\n      id\n      __typename\n    }\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment MetaHeaderNav_publisher on Publisher {\n  id\n  ...MetaHeaderNavLink_publisher\n  __typename\n}\n\nfragment MetaHeaderNavLink_publisher on Publisher {\n  id\n  ...getNavItemHref_publisher\n  __typename\n}\n\nfragment getNavItemHref_publisher on Publisher {\n  id\n  ...publisherUrl_publisher\n  __typename\n}\n\nfragment publisherUrl_publisher on Publisher {\n  id\n  __typename\n  ... on Collection {\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...userUrl_user\n    __typename\n    id\n  }\n}\n\nfragment userUrl_user on User {\n  __typename\n  id\n  customDomainState {\n    live {\n      domain\n      __typename\n    }\n    __typename\n  }\n  username\n  hasSubdomain\n}\n\nfragment PublisherAboutLink_publisher on Publisher {\n  __typename\n  id\n  ... on Collection {\n    slug\n    __typename\n    id\n  }\n  ... on User {\n    ...userUrl_user\n    __typename\n    id\n  }\n}\n\nfragment PublisherFollowButton_publisher on Publisher {\n  __typename\n  ... on Collection {\n    ...CollectionFollowButton_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...UserFollowButton_user\n    __typename\n    id\n  }\n}\n\nfragment CollectionFollowButton_collection on Collection {\n  __typename\n  id\n  viewerIsFollowing\n  name\n  viewerIsSubscribedToLetters\n  canToggleEmail\n  slug\n  isUserSubscribedToCollectionEmails\n  ...collectionUrl_collection\n  ...SusiClickable_collection\n}\n\nfragment SusiClickable_collection on Collection {\n  ...SusiContainer_collection\n  __typename\n  id\n}\n\nfragment SusiContainer_collection on Collection {\n  ...SignInOptions_collection\n  ...SignUpOptions_collection\n  __typename\n  id\n}\n\nfragment SignInOptions_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment UserFollowButton_user on User {\n  ...UserFollowButtonSignedIn_user\n  ...UserFollowButtonSignedOut_user\n  __typename\n  id\n}\n\nfragment UserFollowButtonSignedIn_user on User {\n  id\n  isFollowing\n  __typename\n}\n\nfragment UserFollowButtonSignedOut_user on User {\n  id\n  ...SusiClickable_user\n  __typename\n}\n\nfragment SusiClickable_user on User {\n  ...SusiContainer_user\n  __typename\n  id\n}\n\nfragment SusiContainer_user on User {\n  ...SignInOptions_user\n  ...SignUpOptions_user\n  __typename\n  id\n}\n\nfragment SignInOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment PublisherFollowerCount_publisher on Publisher {\n  __typename\n  id\n  ... on Collection {\n    slug\n    subscriberCount\n    __typename\n    id\n  }\n  ... on User {\n    socialStats {\n      followerCount\n      __typename\n    }\n    username\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderLogo_publisher on Publisher {\n  __typename\n  id\n  name\n  ... on Collection {\n    logo {\n      ...MetaHeaderLogo_imageMetadata\n      ...PublisherLogo_image\n      __typename\n      id\n    }\n    __typename\n    id\n  }\n  ...auroraHooks_publisher\n}\n\nfragment MetaHeaderNavVertical_publisher on Publisher {\n  id\n  ...PublisherAboutLink_publisher\n  ...MetaHeaderNavLink_publisher\n  __typename\n}\n\nfragment MetaHeaderTagline_publisher on Publisher {\n  __typename\n  ... on Collection {\n    tagline\n    __typename\n    id\n  }\n  ... on User {\n    bio\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderThemeProvider_publisher on Publisher {\n  __typename\n  customStyleSheet {\n    ...MetaHeaderThemeProvider_customStyleSheet\n    __typename\n    id\n  }\n  ... on Collection {\n    colorPalette {\n      ...customDefaultBackgroundTheme_colorPalette\n      __typename\n    }\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderActions_publisher on Publisher {\n  __typename\n  ...MetaHeaderPubMenu_publisher\n  ...SearchWidget_publisher\n  ... on Collection {\n    id\n    viewerIsEditor\n    creator {\n      id\n      __typename\n    }\n    customStyleSheet {\n      navigation {\n        navItems {\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n      id\n    }\n    ...CollectionAvatar_collection\n    ...CollectionMetabarActionsPopover_collection\n    ...MetaHeaderActions_collection_common\n    __typename\n  }\n  ... on User {\n    id\n    ...UserAvatar_user\n    __typename\n  }\n}\n\nfragment MetaHeaderActions_collection_common on Collection {\n  creator {\n    id\n    __typename\n  }\n  viewerIsEditor\n  __typename\n  id\n}\n\nfragment UserAvatar_user on User {\n  __typename\n  username\n  id\n  name\n  imageId\n  mediumMemberAt\n  ...userUrl_user\n}\n\nfragment MetaHeaderTop_publisher on Publisher {\n  __typename\n  ... on Collection {\n    slug\n    ...CollectionMetabarActionsPopover_collection\n    ...CollectionAvatar_collection\n    ...MetaHeaderTop_collection\n    __typename\n    id\n  }\n  ... on User {\n    username\n    id\n    __typename\n  }\n}\n\nfragment MetaHeaderTop_collection on Collection {\n  id\n  viewerIsEditor\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment PayWall_post on Post {\n  id\n  creator {\n    name\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment PostCacheController_post on Post {\n  id\n  isLocked\n  ...PostCacheTagger_post\n  __typename\n}\n\nfragment PostCacheTagger_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment PostBodyInserts_post on Post {\n  collection {\n    ...auroraHooks_publisher\n    __typename\n    id\n  }\n  creator {\n    ...auroraHooks_publisher\n    ...DigestReferredPostBodyCreatorPromo_user\n    ...UserMentionTooltip_user\n    __typename\n    id\n  }\n  isPublished\n  isShortform\n  content(postMeteringOptions: $postMeteringOptions) {\n    bodyModel {\n      paragraphs {\n        name\n        text\n        type\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  ...CardByline_post\n  ...PostByline_post\n  ...PostFooterSocialPopover_post\n  ...ShareButtons_post\n  ...BookmarkButton_post\n  ...CreatorActionOverflowPopover_post\n  __typename\n  id\n}\n\nfragment DigestReferredPostBodyCreatorPromo_user on User {\n  id\n  name\n  isFollowing\n  __typename\n}\n\nfragment CardByline_post on Post {\n  ...DraftStatus_post\n  __typename\n  id\n}\n\nfragment PostByline_post on Post {\n  id\n  isPublished\n  mediumUrl\n  firstPublishedAt\n  readingTime\n  statusForCollection\n  isLocked\n  isShortform\n  visibility\n  collection {\n    name\n    id\n    slug\n    ...collectionUrl_collection\n    __typename\n  }\n  creator {\n    name\n    username\n    id\n    bio\n    isFollowing\n    ...UserAvatar_user\n    ...userUrl_user\n    __typename\n  }\n  __typename\n}\n\nfragment PostFooterSocialPopover_post on Post {\n  id\n  mediumUrl\n  title\n  ...ShareButton_post\n  ...NewsletterV3EmailToSubscribersMenuItem_post\n  __typename\n}\n\nfragment ShareButton_post on Post {\n  id\n  __typename\n}\n\nfragment NewsletterV3EmailToSubscribersMenuItem_post on Post {\n  id\n  creator {\n    id\n    newsletterV3 {\n      id\n      subscribersCount\n      __typename\n    }\n    __typename\n  }\n  isPublishToEmail\n  isNewsletter\n  __typename\n}\n\nfragment ShareButtons_post on Post {\n  id\n  isLimitedState\n  visibility\n  ...ShareButton_post\n  __typename\n}\n\nfragment BookmarkButton_post on Post {\n  ...SusiClickable_post\n  ...WithSetReadingList_post\n  __typename\n  id\n}\n\nfragment WithSetReadingList_post on Post {\n  ...ReadingList_post\n  __typename\n  id\n}\n\nfragment ReadingList_post on Post {\n  __typename\n  id\n  readingList\n}\n\nfragment CreatorActionOverflowPopover_post on Post {\n  allowResponses\n  id\n  statusForCollection\n  isLocked\n  isPublished\n  clapCount\n  viewerClapCount\n  mediumUrl\n  pinnedAt\n  pinnedByCreatorAt\n  curationEligibleAt\n  mediumUrl\n  responseDistribution\n  shareKey\n  visibility\n  ...useIsPinnedInContext_post\n  pendingCollection {\n    id\n    name\n    viewerIsEditor\n    creator {\n      id\n      __typename\n    }\n    avatar {\n      id\n      __typename\n    }\n    domain\n    slug\n    __typename\n  }\n  creator {\n    id\n    isBlocking\n    ...MutePopoverOptions_creator\n    ...auroraHooks_publisher\n    __typename\n  }\n  collection {\n    id\n    viewerIsEditor\n    name\n    creator {\n      id\n      __typename\n    }\n    avatar {\n      id\n      __typename\n    }\n    domain\n    slug\n    ...MutePopoverOptions_collection\n    ...auroraHooks_publisher\n    __typename\n  }\n  ...ClapMutation_post\n  __typename\n}\n\nfragment ClapMutation_post on Post {\n  __typename\n  id\n  clapCount\n  viewerClapCount\n  ...MultiVoteCount_post\n}\n\nfragment MultiVoteCount_post on Post {\n  id\n  ...PostVotersNetwork_post\n  __typename\n}\n\nfragment PostVotersNetwork_post on Post {\n  voterCount\n  viewerClapCount\n  recommenders {\n    name\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment useIsPinnedInContext_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  pendingCollection {\n    id\n    __typename\n  }\n  pinnedAt\n  pinnedByCreatorAt\n  __typename\n}\n\nfragment UserMentionTooltip_user on User {\n  id\n  name\n  username\n  bio\n  imageId\n  createdAt\n  mediumMemberAt\n  lastPostCreatedAt\n  socialStats {\n    followerCount\n    __typename\n  }\n  ...UserAvatar_user\n  ...UserFollowButton_user\n  __typename\n}\n\nfragment PostFooter_post on Post {\n  id\n  visibility\n  license\n  isPublished\n  allowResponses\n  layerCake\n  newsletterId\n  collection {\n    viewerIsEditor\n    newsletterV3 {\n      isSubscribed\n      showPromo\n      __typename\n      id\n    }\n    ...auroraHooks_publisher\n    ...NewsletterV3Promo_publisher\n    ...PostFooter_collection\n    ...TagList_collection\n    __typename\n    id\n  }\n  creator {\n    newsletterV3 {\n      id\n      ...NewsletterV3Promo_newsletterV3\n      __typename\n    }\n    viewerIsUser\n    ...auroraHooks_publisher\n    __typename\n    id\n  }\n  sequence {\n    sequenceId\n    ...SequencePreview_sequence\n    __typename\n  }\n  tags {\n    id\n    ...TagList_tags\n    __typename\n  }\n  topics {\n    topicId\n    name\n    __typename\n  }\n  viewerClapCount\n  showSubscribeToProfilePromo\n  showSubscribeToCollectionNewsletterV3Promo\n  inResponseToPostResult {\n    ... on PostResult {\n      ...InResponseToPostPreview_postResult\n      __typename\n    }\n    __typename\n  }\n  ...PostFooterActionsBar_post\n  ...PostFooterByline_post\n  ...PostFooterBylineAurora_post\n  ...PostInternalLinks_post\n  ...PostNextFiveStories_post\n  ...PostRecirc_post\n  ...SequencePostRecirc_post\n  ...ThanksTo_post\n  ...TranslatedBy_post\n  ...InResponseToPostPreview_mediaResource\n  ...EntityDrivenSubscriptionCallToAction_post\n  __typename\n}\n\nfragment NewsletterV3Promo_publisher on Publisher {\n  __typename\n  ... on User {\n    id\n    username\n    name\n    viewerIsUser\n    newsletterV3 {\n      id\n      ...NewsletterV3Promo_newsletterV3\n      __typename\n    }\n    __typename\n  }\n  ... on Collection {\n    id\n    slug\n    domain\n    name\n    viewerIsEditor\n    newsletterV3 {\n      id\n      ...NewsletterV3Promo_newsletterV3\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment NewsletterV3Promo_newsletterV3 on NewsletterV3 {\n  slug\n  name\n  description\n  ...NewsletterV3SubscribeButton_newsletterV3\n  ...NewsletterV3SubscribeByEmail_newsletterV3\n  __typename\n  id\n}\n\nfragment NewsletterV3SubscribeButton_newsletterV3 on NewsletterV3 {\n  id\n  name\n  isSubscribed\n  type\n  user {\n    name\n    __typename\n    id\n  }\n  collection {\n    ...CollectionMetabar_collection\n    ...SusiClickable_collection\n    ...collectionDefaultBackgroundTheme_collection\n    __typename\n    id\n  }\n  ...SusiClickable_newsletterV3\n  ...useNewsletterV3Subscription_newsletterV3\n  __typename\n}\n\nfragment SusiClickable_newsletterV3 on NewsletterV3 {\n  ...SusiContainer_newsletterV3\n  __typename\n  id\n}\n\nfragment SusiContainer_newsletterV3 on NewsletterV3 {\n  ...SignInOptions_newsletterV3\n  ...SignUpOptions_newsletterV3\n  __typename\n  id\n}\n\nfragment SignInOptions_newsletterV3 on NewsletterV3 {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_newsletterV3 on NewsletterV3 {\n  id\n  name\n  __typename\n}\n\nfragment useNewsletterV3Subscription_newsletterV3 on NewsletterV3 {\n  id\n  isSubscribed\n  __typename\n}\n\nfragment NewsletterV3SubscribeByEmail_newsletterV3 on NewsletterV3 {\n  id\n  slug\n  collection {\n    ...collectionDefaultBackgroundTheme_collection\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment PostFooter_collection on Collection {\n  name\n  description\n  ...PostFooterCollectionButton_collection\n  __typename\n  id\n}\n\nfragment PostFooterCollectionButton_collection on Collection {\n  id\n  name\n  ...collectionUrl_collection\n  __typename\n}\n\nfragment PostFooterActionsBar_post on Post {\n  id\n  visibility\n  isPublished\n  allowResponses\n  viewerClapCount\n  creator {\n    id\n    isBlocking\n    __typename\n  }\n  collection {\n    id\n    viewerIsEditor\n    __typename\n  }\n  ...BookmarkButton_post\n  ...MultiVote_post\n  ...SusiClickable_post\n  ...ManageSubmission_post\n  ...CollectionSubmission_post\n  ...ShareButtons_post\n  ...ResponsesIconButton_post\n  ...CreatorActionOverflowPopover_post\n  ...PostFooterSocialPopover_post\n  __typename\n}\n\nfragment MultiVote_post on Post {\n  id\n  clapCount\n  creator {\n    id\n    ...SusiClickable_user\n    __typename\n  }\n  viewerClapCount\n  isPublished\n  ...SusiClickable_post\n  collection {\n    id\n    slug\n    __typename\n  }\n  isLimitedState\n  ...MultiVoteCount_post\n  __typename\n}\n\nfragment ManageSubmission_post on Post {\n  id\n  statusForCollection\n  collection {\n    ...ManageSubmission_collection\n    __typename\n    id\n  }\n  pendingCollection {\n    ...ManageSubmission_collection\n    __typename\n    id\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment ManageSubmission_collection on Collection {\n  name\n  viewerIsEditor\n  creator {\n    id\n    __typename\n  }\n  ...CollectionAvatar_collection\n  __typename\n  id\n}\n\nfragment CollectionSubmission_post on Post {\n  id\n  ...CollectionSubmissionPopover_post\n  ...CollectionSubmissionPopoverMenuItem_post\n  __typename\n}\n\nfragment CollectionSubmissionPopover_post on Post {\n  id\n  isPublished\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment CollectionSubmissionPopoverMenuItem_post on Post {\n  id\n  statusForCollection\n  isPublished\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment ResponsesIconButton_post on Post {\n  allowResponses\n  postResponses {\n    count\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment PostFooterByline_post on Post {\n  id\n  showSubscribeToProfilePromo\n  creator {\n    name\n    username\n    bio\n    id\n    isBlocking\n    ...UserAvatar_user\n    ...UserFollowButton_user\n    ...userUrl_user\n    __typename\n  }\n  collection {\n    name\n    description\n    ...CollectionAvatar_collection\n    ...CollectionFollowButton_collection\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ...CollectionFollowButton_post\n  ...UserFollowButton_post\n  __typename\n}\n\nfragment CollectionFollowButton_post on Post {\n  __typename\n  id\n}\n\nfragment UserFollowButton_post on Post {\n  collection {\n    id\n    __typename\n  }\n  ...UserFollowButtonSignedOut_post\n  __typename\n  id\n}\n\nfragment UserFollowButtonSignedOut_post on Post {\n  ...SusiClickable_post\n  __typename\n  id\n}\n\nfragment PostFooterBylineAurora_post on Post {\n  id\n  showSubscribeToProfilePromo\n  creator {\n    name\n    username\n    bio\n    id\n    isBlocking\n    ...UserFollowButton_user\n    ...auroraHooks_publisher\n    ...userUrl_user\n    __typename\n  }\n  collection {\n    name\n    description\n    ...CollectionFollowButton_collection\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ...UserFollowButton_post\n  ...CollectionFollowButton_post\n  __typename\n}\n\nfragment PostInternalLinks_post on Post {\n  id\n  internalLinks(paging: {limit: 8}) @include(if: $includePostInternalLinks) {\n    items {\n      ... on Post {\n        ...PostRecircItemV2_post\n        __typename\n        id\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PostRecircItemV2_post on Post {\n  __typename\n  id\n  title\n  mediumUrl\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    __typename\n  }\n  ...PostByline_post\n  ...PostPresentationTracker_post\n}\n\nfragment PostPresentationTracker_post on Post {\n  id\n  visibility\n  previewContent {\n    isFullContent\n    __typename\n  }\n  collection {\n    id\n    slug\n    __typename\n  }\n  __typename\n}\n\nfragment PostNextFiveStories_post on Post {\n  firstPublishedAt\n  pinnedAt\n  __typename\n  id\n}\n\nfragment PostRecirc_post on Post {\n  recirc(paging: {limit: $postRecircPaging}) @include(if: $includePostRecirc) {\n    items {\n      __typename\n      ... on Post {\n        ...Recirc_post\n        __typename\n        id\n      }\n      ... on SuggestedPost {\n        post {\n          __typename\n          ...Recirc_post\n          id\n        }\n        postSuggestionReasons {\n          reason\n          users {\n            name\n            __typename\n          }\n          topics {\n            name\n            __typename\n          }\n          collections {\n            name\n            __typename\n          }\n          tags {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment Recirc_post on Post {\n  ...PostListingItemRecirc_post\n  __typename\n  id\n}\n\nfragment PostListingItemRecirc_post on Post {\n  __typename\n  id\n  title\n  isLocked\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    __typename\n  }\n  ...PostByline_post\n  ...PostPresentationTracker_post\n  ...BookmarkButton_post\n  ...MultiVote_post\n  ...PostRecircItemV2_post\n}\n\nfragment SequencePostRecirc_post on Post {\n  elevateRecirc(paging: {limit: $postRecircPaging}) @include(if: $includeSequenceRecirc) {\n    items {\n      __typename\n      ... on Post {\n        ...PostListingItemRecirc_post\n        __typename\n        id\n      }\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment SequencePreview_sequence on Sequence {\n  sequenceId\n  ...SequenceCoverImage_sequence\n  description\n  eyebrow\n  slug\n  tabletImage {\n    id\n    __typename\n  }\n  title\n  hideIndex\n  __typename\n}\n\nfragment SequenceCoverImage_sequence on Sequence {\n  title\n  coverImage {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment TagList_tags on Tag {\n  id\n  displayTitle\n  __typename\n}\n\nfragment TagList_collection on Collection {\n  id\n  slug\n  domain\n  __typename\n}\n\nfragment ThanksTo_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  collaborators {\n    id\n    user {\n      id\n      name\n      __typename\n    }\n    state\n    __typename\n  }\n  __typename\n}\n\nfragment TranslatedBy_post on Post {\n  creator {\n    name\n    ...userUrl_user\n    __typename\n    id\n  }\n  translationSourcePost {\n    id\n    title\n    mediumUrl\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment InResponseToPostPreview_postResult on PostResult {\n  __typename\n  ... on Post {\n    id\n    title\n    mediumUrl\n    creator {\n      id\n      name\n      __typename\n    }\n    clapCount\n    responsesCount\n    __typename\n  }\n}\n\nfragment InResponseToPostPreview_mediaResource on Post {\n  inResponseToMediaResource {\n    mediumQuote {\n      ...Quote_quote\n      __typename\n      id\n    }\n    __typename\n    id\n  }\n  __typename\n  id\n}\n\nfragment Quote_quote on Quote {\n  quoteId\n  userId\n  post {\n    id\n    title\n    mediumUrl\n    creator {\n      id\n      username\n      name\n      ...userUrl_user\n      __typename\n    }\n    __typename\n  }\n  startOffset\n  endOffset\n  paragraphs {\n    text\n    type\n    markups {\n      anchorType\n      end\n      href\n      rel\n      start\n      title\n      type\n      userId\n      __typename\n    }\n    ...TextParagraph_paragraph\n    __typename\n  }\n  ...buildQuotePreviewParagraph_quote\n  __typename\n  id\n}\n\nfragment buildQuotePreviewParagraph_quote on Quote {\n  paragraphs {\n    id\n    text\n    type\n    markups {\n      end\n      start\n      type\n      __typename\n    }\n    __typename\n  }\n  startOffset\n  endOffset\n  __typename\n  id\n}\n\nfragment EntityDrivenSubscriptionCallToAction_post on Post {\n  __typename\n  id\n  creator {\n    name\n    __typename\n    id\n  }\n}\n\nfragment PostHeader_post on Post {\n  inResponseToPostResult {\n    ... on PostResult {\n      ...InResponseToPostPreview_postResult\n      __typename\n    }\n    __typename\n  }\n  topics {\n    name\n    __typename\n  }\n  tags {\n    id\n    __typename\n  }\n  collection {\n    ...NewsletterV3PostHeaderCTA_collection\n    __typename\n    id\n  }\n  layerCake\n  isLocked\n  id\n  firstPublishedAt\n  isNewsletter\n  ...InResponseToPostPreview_mediaResource\n  ...MeterController_post\n  ...PostNoteMissingNotification_post\n  ...PostPaywallAlert_post\n  ...AudioPlayback_post\n  __typename\n}\n\nfragment MeterController_post on Post {\n  creator {\n    id\n    __typename\n  }\n  isLocked\n  lockedSource\n  ...LIHighlightMeter_post\n  ...LOHighlightMeter_post\n  ...SusiContainer_post\n  __typename\n  id\n}\n\nfragment LIHighlightMeter_post on Post {\n  id\n  ...UpsellClickable_post\n  __typename\n}\n\nfragment LOHighlightMeter_post on Post {\n  id\n  __typename\n}\n\nfragment PostNoteMissingNotification_post on Post {\n  id\n  __typename\n}\n\nfragment PostPaywallAlert_post on Post {\n  id\n  visibility\n  lockedSource\n  curationEligibleAt\n  collection {\n    isEnrolledInHightower\n    isAuroraVisible\n    viewerIsEditor\n    __typename\n    id\n  }\n  creator {\n    id\n    isPartnerProgramEnrolled\n    __typename\n  }\n  isDistributionAlertDismissed\n  __typename\n}\n\nfragment AudioPlayback_post on Post {\n  id\n  audioVersionUrl\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    __typename\n  }\n  ...UpsellClickable_post\n  __typename\n}\n\nfragment NewsletterV3PostHeaderCTA_collection on Collection {\n  id\n  domain\n  slug\n  name\n  newsletterV3 {\n    id\n    slug\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PostMetadata_post on Post {\n  id\n  socialTitle\n  socialDek\n  canonicalUrl\n  mediumUrl\n  metaDescription\n  latestPublishedAt\n  visibility\n  isLimitedState\n  readingTime\n  creator {\n    name\n    twitterScreenName\n    ...userUrl_user\n    __typename\n    id\n  }\n  collection {\n    ampEnabled\n    twitterUsername\n    facebookPageId\n    __typename\n    id\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    originalHeight\n    originalWidth\n    __typename\n  }\n  isShortform\n  ...PostJsonLd_post\n  ...postMetaDescription_post\n  ...shortformPostMetaDescription_post\n  ...shouldIndex_post\n  ...shortformPostTitle_post\n  ...getTitleDetails_post\n  ...getTitleForPost_post\n  __typename\n}\n\nfragment PostJsonLd_post on Post {\n  id\n  title\n  seoTitle\n  mediumUrl\n  creator {\n    name\n    username\n    ...userUrl_user\n    __typename\n    id\n  }\n  collection {\n    id\n    name\n    domain\n    slug\n    logo {\n      id\n      originalWidth\n      originalHeight\n      __typename\n    }\n    __typename\n  }\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    originalWidth\n    originalHeight\n    __typename\n  }\n  isLocked\n  firstPublishedAt\n  updatedAt\n  tags {\n    displayTitle\n    __typename\n  }\n  sequence {\n    slug\n    __typename\n  }\n  lockedSource\n  layerCake\n  isShortform\n  shortformType\n  structuredData\n  ...getTitleForPost_post\n  __typename\n}\n\nfragment getTitleForPost_post on Post {\n  id\n  title\n  ...postTitle_post\n  ...getTitleDetails_post\n  __typename\n}\n\nfragment postTitle_post on Post {\n  id\n  title\n  seoTitle\n  firstPublishedAt\n  ...getPostContentAsString_post\n  ...appendPostContext_post\n  collection {\n    id\n    name\n    domain\n    ...maybeAppendProductName_collection\n    __typename\n  }\n  creator {\n    name\n    __typename\n    id\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  __typename\n}\n\nfragment getPostContentAsString_post on Post {\n  content(postMeteringOptions: $postMeteringOptions) {\n    bodyModel {\n      paragraphs {\n        text\n        type\n        mixtapeMetadata {\n          href\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment appendPostContext_post on Post {\n  id\n  sequence {\n    title\n    __typename\n  }\n  collection {\n    name\n    __typename\n    id\n  }\n  creator {\n    name\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment maybeAppendProductName_collection on Collection {\n  id\n  domain\n  __typename\n}\n\nfragment getTitleDetails_post on Post {\n  id\n  content(postMeteringOptions: $postMeteringOptions) {\n    bodyModel {\n      ...GetTitleIndexMap_bodyModel\n      __typename\n    }\n    __typename\n  }\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment GetTitleIndexMap_bodyModel on RichText {\n  paragraphs {\n    type\n    text\n    __typename\n  }\n  __typename\n}\n\nfragment postMetaDescription_post on Post {\n  id\n  title\n  seoDescription\n  metaDescription\n  creator {\n    id\n    name\n    __typename\n  }\n  collection {\n    id\n    name\n    __typename\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment shortformPostMetaDescription_post on Post {\n  id\n  metaDescription\n  seoDescription\n  shortformType\n  title\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment shouldIndex_post on Post {\n  id\n  firstPublishedAt\n  isLimitedState\n  isShortform\n  shortformType\n  visibility\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment shortformPostTitle_post on Post {\n  id\n  title\n  seoTitle\n  ...getPostContentAsString_post\n  ...appendPostContext_post\n  collection {\n    ...maybeAppendProductName_collection\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment PostPublishedDialog_prerequisite_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  collection {\n    id\n    viewerIsEditor\n    __typename\n  }\n  creatorPartnerProgramEnrollmentStatus\n  __typename\n}\n\nfragment PostReadTracker_post on Post {\n  id\n  collection {\n    slug\n    __typename\n    id\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    __typename\n  }\n  __typename\n}\n\nfragment PostScreenThemeProvider_post on Post {\n  collection {\n    colorPalette {\n      ...customDefaultBackgroundTheme_colorPalette\n      __typename\n    }\n    ...auroraHooks_publisher\n    __typename\n    id\n  }\n  creator {\n    ...auroraHooks_publisher\n    __typename\n    id\n  }\n  customStyleSheet {\n    ...customDefaultBackgroundTheme_customStyleSheet\n    ...customStyleSheetFontTheme_customStyleSheet\n    __typename\n    id\n  }\n  __typename\n  id\n}\n\nfragment customStyleSheetFontTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    fonts {\n      font1 {\n        name\n        __typename\n      }\n      font2 {\n        name\n        __typename\n      }\n      font3 {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PostScrollTracker_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  __typename\n}\n\nfragment PostSidebar_post on Post {\n  id\n  clapCount\n  collection {\n    ...auroraHooks_publisher\n    ...PostSidebar_collection\n    __typename\n    id\n  }\n  creator {\n    bio\n    name\n    ...UserFollowButton_user\n    ...auroraHooks_publisher\n    ...userUrl_user\n    __typename\n    id\n  }\n  isShortform\n  ...BookmarkButton_post\n  ...CollectionFollowButton_post\n  ...MultiVote_post\n  ...ResponsesIconButton_post\n  ...UserFollowButton_post\n  ...TableOfContents_post\n  __typename\n}\n\nfragment PostSidebar_collection on Collection {\n  id\n  description\n  tagline\n  ...CollectionFollowButton_collection\n  ...collectionUrl_collection\n  __typename\n}\n\nfragment TableOfContents_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  content(postMeteringOptions: $postMeteringOptions) {\n    bodyModel {\n      paragraphs {\n        id\n        name\n        type\n        text\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment RegWall_post on Post {\n  id\n  lockedSource\n  ...SusiClickable_post\n  __typename\n}\n\nfragment SupportedContainerStyles_styleNode on StyleNode {\n  container {\n    backgroundColor\n    borderColor\n    borderRadius\n    borderStyle\n    borderWidth\n    marginBottom\n    marginLeft\n    marginRight\n    marginTop\n    paddingBottom\n    paddingLeft\n    paddingRight\n    paddingTop\n    __typename\n  }\n  __typename\n}\n\nfragment SuspendedBannerLoader_post on Post {\n  id\n  isSuspended\n  __typename\n}\n\nfragment SuspendedBannerLoader_user on User {\n  id\n  isSuspended\n  __typename\n}\n\nfragment UserSubdomainFlow_user on User {\n  id\n  hasCompletedProfile\n  name\n  bio\n  imageId\n  ...UserCompleteProfileDialog_user\n  ...UserSubdomainOnboardingDialog_user\n  __typename\n}\n\nfragment UserCompleteProfileDialog_user on User {\n  id\n  name\n  bio\n  imageId\n  hasCompletedProfile\n  __typename\n}\n\nfragment UserSubdomainOnboardingDialog_user on User {\n  id\n  customDomainState {\n    pending {\n      status\n      __typename\n    }\n    live {\n      status\n      __typename\n    }\n    __typename\n  }\n  username\n  __typename\n}\n\nfragment buildBranchViewData_post on Post {\n  creator {\n    name\n    id\n    isFollowing\n    __typename\n  }\n  collection {\n    name\n    id\n    viewerIsFollowing\n    __typename\n  }\n  layerCake\n  primaryTopic {\n    slug\n    name\n    isFollowing\n    __typename\n    id\n  }\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment optimizelyData_post on Post {\n  creator {\n    name\n    __typename\n    id\n  }\n  collection {\n    name\n    __typename\n    id\n  }\n  primaryTopic {\n    name\n    __typename\n    id\n  }\n  __typename\n  id\n}\n\nfragment TruncatedPostCard_user on User {\n  __typename\n  name\n  username\n  ...CardByline_user\n  id\n}\n\nfragment CardByline_user on User {\n  __typename\n  id\n  name\n  username\n  createdAt\n  mediumMemberAt\n  lastPostCreatedAt\n  socialStats {\n    followerCount\n    __typename\n  }\n  ...userUrl_user\n  ...UserMentionTooltip_user\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">post</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">PostHandler</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;InteractivePostBodyQuery&quot;,&quot;variables&quot;:{&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;showNotes&quot;:true},&quot;query&quot;:&quot;query InteractivePostBodyQuery($postId: ID!, $showNotes: Boolean!) {\n  post(id: $postId) {\n    id\n    highlights {\n      id\n      ...ActiveSelectionContext_highlight\n      ...HighlighSegmentContext_highlight\n      ...NormalizeHighlights_highlight\n      ...PostBody_highlight\n      __typename\n    }\n    privateNotes @include(if: $showNotes) {\n      ...PostBody_privateNote\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ActiveSelectionContext_highlight on Quote {\n  id\n  ...SelectionMenu_highlight\n  __typename\n}\n\nfragment SelectionMenu_highlight on Quote {\n  id\n  ...SelectionMenuPopover_highlight\n  __typename\n}\n\nfragment SelectionMenuPopover_highlight on Quote {\n  id\n  userId\n  user {\n    name\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment HighlighSegmentContext_highlight on Quote {\n  endOffset\n  id\n  paragraphs {\n    name\n    __typename\n  }\n  startOffset\n  userId\n  __typename\n}\n\nfragment PostBody_highlight on Quote {\n  paragraphs {\n    id\n    __typename\n  }\n  ...normalizedBodyModel_highlight\n  ...PostBodySection_highlight\n  ...PostNotesMarkers_highlight\n  __typename\n  id\n}\n\nfragment normalizedBodyModel_highlight on Quote {\n  ...getParagraphHighlights_highlight\n  __typename\n  id\n}\n\nfragment getParagraphHighlights_highlight on Quote {\n  id\n  paragraphs {\n    name\n    __typename\n  }\n  startOffset\n  endOffset\n  userId\n  __typename\n}\n\nfragment PostBodySection_highlight on Quote {\n  ...ParagraphLayoutGrouping_highlight\n  __typename\n  id\n}\n\nfragment ParagraphLayoutGrouping_highlight on Quote {\n  ...ParagraphStyleGrouping_highlight\n  __typename\n  id\n}\n\nfragment ParagraphStyleGrouping_highlight on Quote {\n  ...PostBodyParagraph_highlight\n  __typename\n  id\n}\n\nfragment PostBodyParagraph_highlight on Quote {\n  ...TextParagraph_highlight\n  ...ImageParagraph_highlight\n  __typename\n  id\n}\n\nfragment TextParagraph_highlight on Quote {\n  ...Markups_highlight\n  __typename\n  id\n}\n\nfragment Markups_highlight on Quote {\n  id\n  paragraphs {\n    name\n    __typename\n  }\n  startOffset\n  endOffset\n  userId\n  __typename\n}\n\nfragment ImageParagraph_highlight on Quote {\n  id\n  ...Markups_highlight\n  __typename\n}\n\nfragment PostNotesMarkers_highlight on Quote {\n  id\n  endOffset\n  paragraphs {\n    id\n    name\n    __typename\n  }\n  startOffset\n  userId\n  user {\n    id\n    name\n    ...PostNotesDetails_user\n    __typename\n  }\n  __typename\n}\n\nfragment PostNotesDetails_user on User {\n  id\n  imageId\n  name\n  username\n  ...UserAvatar_user\n  __typename\n}\n\nfragment UserAvatar_user on User {\n  __typename\n  username\n  id\n  name\n  imageId\n  mediumMemberAt\n  ...userUrl_user\n}\n\nfragment userUrl_user on User {\n  __typename\n  id\n  customDomainState {\n    live {\n      domain\n      __typename\n    }\n    __typename\n  }\n  username\n  hasSubdomain\n}\n\nfragment PostBody_privateNote on Note {\n  ...normalizedBodyModel_privateNote\n  ...PostBodySection_privateNote\n  __typename\n  id\n}\n\nfragment normalizedBodyModel_privateNote on Note {\n  ...getParagraphPrivateNotes_privateNote\n  __typename\n  id\n}\n\nfragment getParagraphPrivateNotes_privateNote on Note {\n  id\n  anchor\n  author {\n    id\n    name\n    username\n    imageId\n    mediumMemberAt\n    ...userUrl_user\n    __typename\n  }\n  content\n  createdAt\n  postId\n  post {\n    id\n    creator {\n      id\n      __typename\n    }\n    collection {\n      id\n      viewerIsEditor\n      __typename\n    }\n    __typename\n  }\n  replies {\n    id\n    author {\n      id\n      name\n      username\n      imageId\n      mediumMemberAt\n      ...userUrl_user\n      __typename\n    }\n    content\n    createdAt\n    noteId\n    postId\n    __typename\n  }\n  selectionStartOffset\n  selectionEndOffset\n  __typename\n}\n\nfragment PostBodySection_privateNote on Note {\n  ...ParagraphLayoutGrouping_privateNote\n  __typename\n  id\n}\n\nfragment ParagraphLayoutGrouping_privateNote on Note {\n  ...ParagraphStyleGrouping_privateNote\n  __typename\n  id\n}\n\nfragment ParagraphStyleGrouping_privateNote on Note {\n  ...PostBodyParagraph_privateNote\n  __typename\n  id\n}\n\nfragment PostBodyParagraph_privateNote on Note {\n  ...TextParagraph_privateNote\n  ...ImageParagraph_privateNote\n  __typename\n  id\n}\n\nfragment TextParagraph_privateNote on Note {\n  ...PostAnnotationsMarker_privateNote\n  __typename\n  id\n}\n\nfragment PostAnnotationsMarker_privateNote on Note {\n  ...PostViewNoteCard_privateNote\n  __typename\n  id\n}\n\nfragment PostViewNoteCard_privateNote on Note {\n  id\n  author {\n    id\n    ...PostViewNoteCard_user\n    __typename\n  }\n  content\n  createdAt\n  postId\n  post {\n    id\n    creator {\n      id\n      __typename\n    }\n    collection {\n      id\n      viewerIsEditor\n      __typename\n    }\n    __typename\n  }\n  replies {\n    id\n    ...PostViewNoteCard_noteReply\n    __typename\n  }\n  selectionStartOffset\n  selectionEndOffset\n  __typename\n}\n\nfragment PostViewNoteCard_user on User {\n  id\n  name\n  username\n  ...UserAvatar_user\n  ...userUrl_user\n  __typename\n}\n\nfragment PostViewNoteCard_noteReply on NoteReply {\n  id\n  author {\n    id\n    ...PostViewNoteCard_user\n    __typename\n  }\n  content\n  createdAt\n  noteId\n  postId\n  __typename\n}\n\nfragment ImageParagraph_privateNote on Note {\n  ...PostAnnotationsMarker_privateNote\n  __typename\n  id\n}\n\nfragment NormalizeHighlights_highlight on Quote {\n  endOffset\n  startOffset\n  paragraphs {\n    name\n    text\n    __typename\n  }\n  __typename\n  id\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">post</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">InteractivePostBodyQuery</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/clientele/reports/performance/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client&quot;:{&quot;name&quot;:&quot;lite&quot;,&quot;version&quot;:&quot;main-20210305-183757-c310e81f10&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;nav&quot;,&quot;data&quot;:{&quot;to&quot;:&quot;ShowPostUnderUser&quot;,&quot;from&quot;:&quot;ShowUser&quot;,&quot;loggedIn&quot;:&quot;no&quot;,&quot;nav&quot;:1155}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/clientele/reports/performance/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;PagedThreadedPostResponsesQuery&quot;,&quot;variables&quot;:{&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;postResponsesPaging&quot;:{&quot;limit&quot;:10}},&quot;query&quot;:&quot;query PagedThreadedPostResponsesQuery($postId: ID!, $postResponsesPaging: PagingOptions) {\n  post(id: $postId) {\n    id\n    ...CloseDiscussion_post\n    responsesCount\n    postResponses {\n      count\n      __typename\n    }\n    threadedPostResponses(paging: $postResponsesPaging) {\n      __typename\n      pagingInfo {\n        next {\n          limit\n          to\n          __typename\n        }\n        __typename\n      }\n      posts {\n        ... on Post {\n          ...StoryResponse_threadedStoryResponse_post\n          ...SimpleResponse_threadedSimpleResponse_post\n          ...SimpleResponse_threadedSimpleResponse_defaultPostResponses\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n\nfragment CloseDiscussion_post on Post {\n  id\n  responsesLocked\n  isLockedResponse\n  __typename\n}\n\nfragment SimpleResponse_threadedSimpleResponse_post on Post {\n  id\n  createdAt\n  firstPublishedAt\n  latestPublishedAt\n  title\n  creator {\n    id\n    name\n    username\n    imageId\n    mediumMemberAt\n    isBlocking\n    ...userUrl_user\n    ...UserMentionTooltip_user\n    __typename\n  }\n  clapCount\n  viewerClapCount\n  isPublished\n  voterCount\n  responsesCount\n  postResponses {\n    count\n    __typename\n  }\n  allowResponses\n  latestRev\n  recommenders {\n    id\n    name\n    __typename\n  }\n  mediumUrl\n  content {\n    bodyModel {\n      paragraphs {\n        text\n        __typename\n      }\n      ...getSlateBodyFromPostBodyModel_bodyModel\n      __typename\n    }\n    __typename\n  }\n  collection {\n    id\n    slug\n    __typename\n  }\n  isLimitedState\n  inResponseToType\n  responseDistribution\n  ...PostPresentationTracker_post\n  ...PostScrollTracker_post\n  ...ResponseQuote_post\n  __typename\n}\n\nfragment PostPresentationTracker_post on Post {\n  id\n  visibility\n  previewContent {\n    isFullContent\n    __typename\n  }\n  collection {\n    id\n    slug\n    __typename\n  }\n  __typename\n}\n\nfragment PostScrollTracker_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  __typename\n}\n\nfragment ResponseQuote_post on Post {\n  inResponseToMediaResource {\n    href\n    mediumQuote {\n      quoteId\n      startOffset\n      endOffset\n      paragraphs {\n        ...TextParagraph_paragraph\n        __typename\n      }\n      ...buildQuotePreviewParagraph_quote\n      __typename\n      id\n    }\n    __typename\n    id\n  }\n  __typename\n  id\n}\n\nfragment buildQuotePreviewParagraph_quote on Quote {\n  paragraphs {\n    id\n    text\n    type\n    markups {\n      end\n      start\n      type\n      __typename\n    }\n    __typename\n  }\n  startOffset\n  endOffset\n  __typename\n  id\n}\n\nfragment TextParagraph_paragraph on Paragraph {\n  type\n  hasDropCap\n  ...Markups_paragraph\n  ...ParagraphRefsMapContext_paragraph\n  __typename\n  id\n}\n\nfragment Markups_paragraph on Paragraph {\n  name\n  text\n  hasDropCap\n  dropCapImage {\n    ...MarkupNode_data_dropCapImage\n    __typename\n    id\n  }\n  markups {\n    type\n    start\n    end\n    href\n    anchorType\n    userId\n    linkMetadata {\n      httpStatus\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment MarkupNode_data_dropCapImage on ImageMetadata {\n  ...DropCap_image\n  __typename\n  id\n}\n\nfragment DropCap_image on ImageMetadata {\n  id\n  originalHeight\n  originalWidth\n  __typename\n}\n\nfragment ParagraphRefsMapContext_paragraph on Paragraph {\n  id\n  name\n  text\n  __typename\n}\n\nfragment getSlateBodyFromPostBodyModel_bodyModel on RichText {\n  paragraphs {\n    id\n    name\n    text\n    type\n    markups {\n      type\n      start\n      end\n      href\n      anchorType\n      userId\n      linkMetadata {\n        httpStatus\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment userUrl_user on User {\n  __typename\n  id\n  customDomainState {\n    live {\n      domain\n      __typename\n    }\n    __typename\n  }\n  username\n  hasSubdomain\n}\n\nfragment UserMentionTooltip_user on User {\n  id\n  name\n  username\n  bio\n  imageId\n  createdAt\n  mediumMemberAt\n  lastPostCreatedAt\n  socialStats {\n    followerCount\n    __typename\n  }\n  ...UserAvatar_user\n  ...UserFollowButton_user\n  __typename\n}\n\nfragment UserAvatar_user on User {\n  __typename\n  username\n  id\n  name\n  imageId\n  mediumMemberAt\n  ...userUrl_user\n}\n\nfragment UserFollowButton_user on User {\n  ...UserFollowButtonSignedIn_user\n  ...UserFollowButtonSignedOut_user\n  __typename\n  id\n}\n\nfragment UserFollowButtonSignedIn_user on User {\n  id\n  isFollowing\n  __typename\n}\n\nfragment UserFollowButtonSignedOut_user on User {\n  id\n  ...SusiClickable_user\n  __typename\n}\n\nfragment SusiClickable_user on User {\n  ...SusiContainer_user\n  __typename\n  id\n}\n\nfragment SusiContainer_user on User {\n  ...SignInOptions_user\n  ...SignUpOptions_user\n  __typename\n  id\n}\n\nfragment SignInOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment StoryResponse_threadedStoryResponse_post on Post {\n  id\n  responsesCount\n  postResponses {\n    count\n    __typename\n  }\n  creator {\n    isBlocking\n    ...userUrl_user\n    ...UserMentionTooltip_user\n    __typename\n    id\n  }\n  clapCount\n  previewContent {\n    bodyModel {\n      paragraphs {\n        text\n        type\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  responseDistribution\n  ...PostPresentationTracker_post\n  ...ResponseHeader_post\n  ...ResponseQuote_post\n  __typename\n}\n\nfragment ResponseHeader_post on Post {\n  createdAt\n  creator {\n    ...UserAvatar_user\n    isBlocking\n    __typename\n    id\n  }\n  mediumUrl\n  __typename\n  id\n}\n\nfragment SimpleResponse_threadedSimpleResponse_defaultPostResponses on Post {\n  responsesCount\n  postResponses {\n    count\n    __typename\n  }\n  threadedPostResponses(paging: {limit: 10}) {\n    __typename\n    pagingInfo {\n      next {\n        limit\n        to\n        __typename\n      }\n      __typename\n    }\n    posts {\n      ... on Post {\n        ...StoryResponse_threadedStoryResponse_post\n        ...SimpleResponse_threadedSimpleResponse_post\n        __typename\n        id\n      }\n      __typename\n    }\n  }\n  __typename\n  id\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">lite</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Route" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Route</stringProp>
                  <stringProp name="Header.value">post</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-sampled" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-sampled</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-traceid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-traceid</stringProp>
                  <stringProp name="Header.value">615d1ae16a86d44e</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-Path" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-Path</stringProp>
                  <stringProp name="Header.value">/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81</stringProp>
                </elementProp>
                <elementProp name="Graphql-Operation" elementType="Header">
                  <stringProp name="Header.name">Graphql-Operation</stringProp>
                  <stringProp name="Header.value">PagedThreadedPostResponsesQuery</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Medium-Frontend-App" elementType="Header">
                  <stringProp name="Header.name">Medium-Frontend-App</stringProp>
                  <stringProp name="Header.value">lite/main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">main-20210305-183757-c310e81f10</stringProp>
                </elementProp>
                <elementProp name="ot-tracer-spanid" elementType="Header">
                  <stringProp name="Header.name">ot-tracer-spanid</stringProp>
                  <stringProp name="Header.value">46dceafb6eb8f1e0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lightstep.medium.systems/api/v0/reports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;runtime&quot;:{&quot;guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;start_micros&quot;:1615021613394485,&quot;group_name&quot;:&quot;lite-web&quot;,&quot;attrs&quot;:[{&quot;Key&quot;:&quot;lightstep.tracer_version&quot;,&quot;Value&quot;:&quot;0.20.8&quot;},{&quot;Key&quot;:&quot;lightstep.tracer_platform&quot;,&quot;Value&quot;:&quot;browser&quot;}]},&quot;span_records&quot;:[{&quot;span_guid&quot;:&quot;4c4201556330c13c&quot;,&quot;trace_guid&quot;:&quot;615d1ae16a86d44e&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.navigation&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021619151000,&quot;youngest_micros&quot;:1615021620306000,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;to&quot;,&quot;Value&quot;:&quot;ShowPostUnderUser&quot;},{&quot;Key&quot;:&quot;from&quot;,&quot;Value&quot;:&quot;ShowUser&quot;},{&quot;Key&quot;:&quot;loggedIn&quot;,&quot;Value&quot;:&quot;false&quot;},{&quot;Key&quot;:&quot;parent_span_guid&quot;,&quot;Value&quot;:&quot;46dceafb6eb8f1e0&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null},{&quot;span_guid&quot;:&quot;4c3ebdd20183b309&quot;,&quot;trace_guid&quot;:&quot;6dfc368636b70070&quot;,&quot;runtime_guid&quot;:&quot;1dc2b3c34f0c142d&quot;,&quot;span_name&quot;:&quot;client.performance.report&quot;,&quot;join_ids&quot;:null,&quot;oldest_micros&quot;:1615021620306350,&quot;youngest_micros&quot;:1615021620569540,&quot;attributes&quot;:[{&quot;Key&quot;:&quot;component.version&quot;,&quot;Value&quot;:&quot;main-20210305-183757-c310e81f10&quot;},{&quot;Key&quot;:&quot;report&quot;,&quot;Value&quot;:&quot;nav&quot;},{&quot;Key&quot;:&quot;req.route_name&quot;,&quot;Value&quot;:&quot;unknown&quot;},{&quot;Key&quot;:&quot;span.kind&quot;,&quot;Value&quot;:&quot;client&quot;},{&quot;Key&quot;:&quot;http.status_code&quot;,&quot;Value&quot;:&quot;200&quot;}],&quot;error_flag&quot;:false,&quot;log_records&quot;:null}],&quot;log_records&quot;:null,&quot;timestamp_offset_micros&quot;:1550561,&quot;oldest_micros&quot;:1615021618221645,&quot;youngest_micros&quot;:1615021620895985,&quot;counters&quot;:null,&quot;internal_logs&quot;:[],&quot;internal_metrics&quot;:{&quot;counts&quot;:[],&quot;gauges&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="LightStep-Access-Token" elementType="Header">
                  <stringProp name="Header.name">LightStep-Access-Token</stringProp>
                  <stringProp name="Header.value">ce5be895bef60919541332990ac9fef2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eddyf1xxxer.medium.com/_/batch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;bc09099c5e81&quot;],&quot;collectionIds&quot;:[&quot;&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;&quot;],&quot;tops&quot;:[211],&quot;bottoms&quot;:[871],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021618376,&quot;timeDiff&quot;:3486,&quot;scrollTop&quot;:0,&quot;scrollBottom&quot;:979,&quot;scrollableHeight&quot;:9070,&quot;viewStartedAt&quot;:1615021613125,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021618377,&quot;eventId&quot;:&quot;klxi685k1wk83pj80go&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n818lpaxw0cmy&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n81f37qpqfrz0&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n81hhqhxlw3zg&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;ca24bb15e06f&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n81jv3mah0xr5&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n81w2q2biat06&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n82krsbhsa0h8&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620308,&quot;eventId&quot;:&quot;klxi69n8buj971gosj&quot;},{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;bc09099c5e81&quot;],&quot;collectionIds&quot;:[&quot;&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;post_page&quot;],&quot;tops&quot;:[151],&quot;bottoms&quot;:[6108],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021620344,&quot;timeDiff&quot;:0,&quot;scrollTop&quot;:0,&quot;scrollBottom&quot;:979,&quot;scrollableHeight&quot;:7008,&quot;viewStartedAt&quot;:1615021620213,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620344,&quot;eventId&quot;:&quot;klxi69o810isejbhxf4&quot;},{&quot;key&quot;:&quot;client.navigate&quot;,&quot;data&quot;:{&quot;metadata&quot;:{},&quot;newPath&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;oldPath&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;source&quot;:&quot;&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620425,&quot;eventId&quot;:&quot;klxi69qhosbzkdlhqo&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620428,&quot;eventId&quot;:&quot;klxi69qk2g1urg09kb6&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620429,&quot;eventId&quot;:&quot;klxi69ql1cl3m1wlkvn&quot;},{&quot;key&quot;:&quot;experiment.eligible&quot;,&quot;data&quot;:{&quot;experimentId&quot;:&quot;c36712b902b7&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620429,&quot;eventId&quot;:&quot;klxi69ql1z9e6hf5cd8&quot;},{&quot;key&quot;:&quot;meter.viewed&quot;,&quot;data&quot;:{&quot;uiType&quot;:&quot;lo_highlight_cta&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;meterCount&quot;:2,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620429,&quot;eventId&quot;:&quot;klxi69qluk5b7uo35z&quot;},{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;bc09099c5e81&quot;],&quot;collectionIds&quot;:[&quot;&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;post_page&quot;],&quot;tops&quot;:[231],&quot;bottoms&quot;:[6188],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021620438,&quot;timeDiff&quot;:0,&quot;scrollTop&quot;:0,&quot;scrollBottom&quot;:979,&quot;scrollableHeight&quot;:7088,&quot;viewStartedAt&quot;:1615021620347,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620438,&quot;eventId&quot;:&quot;klxi69qu19a5jiwjmr1&quot;},{&quot;key&quot;:&quot;post.clientViewed&quot;,&quot;data&quot;:{&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;context&quot;:1,&quot;isFriendLink&quot;:false,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620441,&quot;eventId&quot;:&quot;klxi69qx187z5865v74&quot;},{&quot;key&quot;:&quot;post.streamScrolled&quot;,&quot;data&quot;:{&quot;postIds&quot;:[&quot;bc09099c5e81&quot;],&quot;collectionIds&quot;:[&quot;&quot;],&quot;sequenceIds&quot;:[&quot;&quot;],&quot;sources&quot;:[&quot;post_page&quot;],&quot;tops&quot;:[231],&quot;bottoms&quot;:[6188],&quot;areFullPosts&quot;:[true],&quot;loggedAt&quot;:1615021620522,&quot;timeDiff&quot;:0,&quot;scrollTop&quot;:0,&quot;scrollBottom&quot;:979,&quot;scrollableHeight&quot;:7088,&quot;viewStartedAt&quot;:1615021620442,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620522,&quot;eventId&quot;:&quot;klxi69t62cbn3tegwe6&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;clap_sidebar&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620562,&quot;eventId&quot;:&quot;klxi69ua162216sjejr&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;nav_reg&quot;,&quot;operation&quot;:&quot;login&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620562,&quot;eventId&quot;:&quot;klxi69ua1jcpd9i0vgg&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;metered_view_2&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620562,&quot;eventId&quot;:&quot;klxi69uaub3gj9jje5&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;follow_profile&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620563,&quot;eventId&quot;:&quot;klxi69ub25jd8upjqxl&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;nav_reg&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620563,&quot;eventId&quot;:&quot;klxi69ub2a3xo20vimy&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;follow_card&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620564,&quot;eventId&quot;:&quot;klxi69uc110o2s27wd&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;bookmark_preview&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620564,&quot;eventId&quot;:&quot;klxi69uc2ktqtsx8t0s&quot;},{&quot;key&quot;:&quot;susi.viewed&quot;,&quot;data&quot;:{&quot;entryPoint&quot;:&quot;bookmark_sidebar&quot;,&quot;operation&quot;:&quot;register&quot;,&quot;postId&quot;:&quot;bc09099c5e81&quot;,&quot;service&quot;:&quot;lite&quot;,&quot;location&quot;:&quot;https://eddyf1xxxer.medium.com/azure-resource-manager-template-specs-proactive-application-monitoring-using-azure-alerts-bc09099c5e81&quot;,&quot;browserWidth&quot;:1920,&quot;referrer&quot;:&quot;https://eddyf1xxxer.medium.com/&quot;,&quot;referrerSource&quot;:&quot;&quot;},&quot;type&quot;:&quot;e&quot;,&quot;timestamp&quot;:1615021620564,&quot;eventId&quot;:&quot;klxi69uc2o1sfaaf1xy&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-xsrf-token" elementType="Header">
                  <stringProp name="Header.name">x-xsrf-token</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
